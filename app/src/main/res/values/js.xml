<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="renameFunction">
            function rename(element, dir) {\n
               oldName = element.parentElement.getAttribute(\"name\");
               var result = prompt(\"New File Name?\", oldName);

            // if they didn\'t hit cancel and name is different, create form then submit it\n
               if(result != null &amp;&amp; result != oldName)
               {
                   var form = document.createElement(\"form\");
                   form.setAttribute(\"method\", \"POST\");
            // path\n
                   form.setAttribute(\"action\", \"rename.html?path=\" + dir);
                   form.setAttribute(\"accept-charset\", \"UTF-8\");
                   form.setAttribute(\"enctype\", \"multipart/form-data\");

            // first argument in post\n
                   var inp1 = document.createElement(\"input\");
                   inp1.setAttribute(\"type\", \"hidden\");
                   inp1.setAttribute(\"name\", \"oldName\");
                   inp1.setAttribute(\"value\", oldName);
                   form.appendChild(inp1);
            // second argument in post\n
                   var inp2 = document.createElement(\"input\");
                   inp2.setAttribute(\"type\", \"hidden\");
                   inp2.setAttribute(\"name\", \"newName\");
                   inp2.setAttribute(\"value\", result);
                   form.appendChild(inp2);
            // submit form\n
                   document.body.appendChild(form);
                   form.submit();
                }\n
            }\n
    </string>
    <string name="changeLayoutFunction">
        function changeLayout() {
            var list = document.getElementsByClassName(\"list\");
            for(var i=list.length-1; i&gt;=0; --i) {
                var oldClass = list[i].getAttribute(\"class\");
                var newClass = oldClass.replace(\"list\", \"icon\");
                list[i].setAttribute(\"class\", newClass);
            }
        }
    </string>
    <string name="sortFunctions">
    var wasAscending = false;
    function sortByName() {
        var objList = [];

        var arr = document.getElementsByClassName(\"file\");
        for(var i = 0; i &lt; arr.length; i++) // add all elements to the array with a name value \n
        {
            var element = arr[i];
            var name = element.getElementsByTagName(\"span\")[0].innerHTML;
            objList.push({\"name\":name, \"ref\":element});
        }
        var arr2 = document.getElementsByClassName(\"dir\");
        for(var i = 0; i &lt; arr2.length; i++)
        {
            var element = arr2[i];
            var name = element.getElementsByTagName(\"span\")[0].innerHTML;
            if(name.toLowerCase() !== (\"parent folder\")) // leave parent folder at top \n
                objList.push({\"name\":name, \"ref\":element});
        }

        // sort elements by name \n
        if(!wasAscending)
            objList.sort(function(a, b) {
                return a.name.localeCompare(b.name); // ascending order = smallest to largest \n
            });
        else
            objList.sort(function(a, b) {
                return b.name.localeCompare(a.name); // descending order = largest to smallest \n
            });

        wasAscending = !wasAscending;

        var parent = document.getElementById(\"directoryContainer\");

        // remove elements from parent \n
        for(var i in objList)
            parent.removeChild(objList[i].ref);

        // place elements back in parent \n
        for(var i in objList)
            parent.appendChild(objList[i].ref);

    }

    function sortBySize() {
        var objList = [];

        var arr = document.getElementsByClassName(\"file\");
        for(var i = 0; i &lt; arr.length; i++) // add all elements to the array with a size value \n
        {
            var element = arr[i];
            var size = element.getElementsByTagName(\"span\")[1].dataset.size;
            objList.push({\"size\":size, \"ref\":element});
        }

        // sort elements by size \n
        if(!wasAscending)
            objList.sort(function(a, b) {
                return a.size - b.size; // ascending order = smallest to largest \n
            });
        else
            objList.sort(function(a, b) {
                return b.size - a.size; // descending order = largest to smallest \n
            });

        wasAscending = !wasAscending;

        var parent = document.getElementById(\"directoryContainer\");

        // remove elements from parent \n
        for(var i in objList)
            parent.removeChild(objList[i].ref);

        // place elements back in parent \n
        for(var i in objList)
            parent.appendChild(objList[i].ref);

    }


    function sortByDate() {
        var objList = [];

        var arr = document.getElementsByClassName(\"file\");
        for(var i = 0; i &lt; arr.length; i++) // add all elements to the array with a time value \n
        {
            var element = arr[i];
            var time = element.getElementsByTagName(\"span\")[2].dataset.modified;
            objList.push({\"time\":time, \"ref\":element});
        }

        // sort elements by time \n
        if(!wasAscending)
            objList.sort(function(a, b) {
                return a.time - b.time; // ascending order = newest to oldest \n
            });
        else
            objList.sort(function(a, b) {
                return b.time - a.time; // descending order = oldest to newest \n
            });

        wasAscending = !wasAscending;

        var parent = document.getElementById(\"directoryContainer\");

        // remove elements from parent \n
        for(var i in objList)
            parent.removeChild(objList[i].ref);

        // place elements back in parent \n
        for(var i in objList)
            parent.appendChild(objList[i].ref);

    }\n
    </string>
</resources>